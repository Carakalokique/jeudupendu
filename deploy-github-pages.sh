#!/bin/bash

echo "üöÄ D√©ploiement sur GitHub Pages"
echo "================================"
echo ""

# V√©rifier que nous sommes dans un repo git
if [ ! -d ".git" ]; then
    echo "‚ùå Ce n'est pas un repository Git!"
    echo "   Initialisez d'abord avec: git init"
    exit 1
fi

# V√©rifier que le build existe
if [ ! -d "build" ]; then
    echo "‚ùå Le dossier 'build' n'existe pas!"
    echo "   Ex√©cutez d'abord: ./build-optimize.sh"
    exit 1
fi

# Demander confirmation
echo "üìã Ce script va:"
echo "1. Commiter les changements sur la branche main"
echo "2. Cr√©er/mettre √† jour la branche gh-pages"
echo "3. D√©ployer le contenu du dossier 'build/' sur gh-pages"
echo ""
read -p "Voulez-vous continuer? (y/N): " -n 1 -r
echo ""

if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "‚ùå D√©ploiement annul√©"
    exit 1
fi

echo ""
echo "üì¶ 1. Commit des changements sur main..."

# Ajouter tous les fichiers sauf build/
git add .
git add -A
git reset build/ # Ne pas inclure build/ sur main

# Commit avec message automatique
git commit -m "üéÆ Mise √† jour du jeu du pendu avec optimisations et commandes vocales

- ‚úÖ Commandes vocales en fran√ßais
- ‚úÖ 3 pages: principale, multijoueur, difficile  
- ‚úÖ Performance optimis√©e (592KB total)
- ‚úÖ Fonctionnement hors ligne
- ‚úÖ Accessibilit√© am√©lior√©e"

echo "‚úÖ Changements commit√©s sur main"

echo ""
echo "üåê 2. Pr√©paration de la branche gh-pages..."

# Sauvegarder la branche actuelle
CURRENT_BRANCH=$(git branch --show-current)

# Cr√©er ou basculer sur gh-pages
if git show-ref --verify --quiet refs/heads/gh-pages; then
    echo "üìù Branche gh-pages existe d√©j√†, mise √† jour..."
    git checkout gh-pages
    git pull origin gh-pages || true
else
    echo "üÜï Cr√©ation de la branche gh-pages..."
    git checkout --orphan gh-pages
    git rm -rf .
fi

echo ""
echo "üìÇ 3. Copie des fichiers optimis√©s..."

# Copier le contenu de build/ vers la racine de gh-pages
if [ -d "build" ]; then
    cp -r build/* .
else
    echo "‚ùå Erreur: dossier build introuvable"
    exit 1
fi

# Cr√©er un fichier .nojekyll pour GitHub Pages
echo "" > .nojekyll

# Cr√©er un README sp√©cifique pour gh-pages
cat > README.md << 'EOF'
# üéÆ Jeu du Pendu - Version D√©ploy√©e

Cette branche contient la version optimis√©e et minifi√©e du jeu du pendu fran√ßais.

## üåê Pages Disponibles
- **Page Principale**: `/` - Jeu classique avec commandes vocales
- **Page Multijoueur**: `/multijoueur/` - Version multijoueur
- **Page Difficile**: `/pendu-mot-difficile-complique/` - Mots compliqu√©s

## ‚ö° Optimisations
- ‚úÖ JavaScript minifi√©
- ‚úÖ CSS optimis√©  
- ‚úÖ Images compress√©es
- ‚úÖ Cache intelligent
- ‚úÖ Service Worker
- ‚úÖ Score Lighthouse > 90

---
üîß **Version g√©n√©r√©e automatiquement** - Ne pas modifier manuellement
EOF

echo ""
echo "üíæ 4. Commit et push vers GitHub..."

# Ajouter tous les fichiers de production
git add .
git commit -m "üöÄ Deploy optimized version - $(date '+%Y-%m-%d %H:%M:%S')

- Total size: 592KB
- 3 pages included
- All optimizations applied"

# Push vers GitHub
echo "üì§ Push vers origin/gh-pages..."
git push origin gh-pages

# Retourner sur la branche originale
git checkout $CURRENT_BRANCH

echo ""
echo "‚úÖ D√©ploiement termin√©!"
echo ""
echo "üåê Votre site sera disponible √†:"
echo "   https://$(git config remote.origin.url | sed 's/.*github.com[:/]//' | sed 's/.git$//' | tr '[:upper:]' '[:lower:]').github.io/"
echo ""
echo "‚è±Ô∏è  Il peut falloir quelques minutes pour que les changements soient visibles"
echo "üîß Allez dans Settings > Pages de votre repo pour v√©rifier la configuration" 